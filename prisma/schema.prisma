// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CustomerStatus {
  QUEUE
  CHECKED_IN
  CHECKED_OUT
}

enum OrderStatus {
  SUCCESS
  WAITING
  CANCELLED
}

enum ReadyStatus {
  AVAILABLE
  UNAVAILABLE
}

model Customer {
  id        Int            @id @default(autoincrement())
  status    CustomerStatus @default(QUEUE)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  Table     Table?
  OrderBill OrderBill[]
}

model Table {
  id         Int         @id @default(autoincrement())
  ready      ReadyStatus
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  customer   Customer?   @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId Int?        @unique
}

model OrderBill {
  id         Int         @id @default(autoincrement())
  status     OrderStatus @default(WAITING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  customerId Int
  customer   Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  OrderItem  OrderItem[]
}

model OrderItem {
  id          Int       @id @default(autoincrement())
  quantity    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orderBill   OrderBill @relation(fields: [orderBillId], references: [id], onDelete: Cascade)
  orderBillId Int
  Menu        Menu      @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId      Int
}

model MenuCategory {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Menu      Menu[]
}

model Menu {
  id             Int          @id @default(autoincrement())
  name           String
  price          Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  status         ReadyStatus  @default(AVAILABLE)
  menuCategoryId Int
  MenuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id], onDelete: Cascade)
  OrderItem      OrderItem[]
}

model Employee {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  age       Int
  tel       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
